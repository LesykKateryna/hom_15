/// Animate css properties
// usage
// scss - @include animate(color);
//     or @include animate(color width);
//     or @include animate(color width, 1s, linear);

///  @include media('>=358px', '<850px') { }
///
/// @example scss - With set breakpoints with custom values
///  @include media('>desktop', '<=1350px') { }
///
/// @example scss - With a static expression
///  @include media('retina2x') { }
///
/// @example scss - Mixing everything
///  @include media('>=350px', '<tablet', 'retina3x') { }
///
@mixin media($conditions...) {
    @if ($im-media-support and length($conditions) == 0) or
          (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {
       @content;
    } @else if ($im-media-support and length($conditions) > 0) {
       @media #{unquote(parse-expression(nth($conditions, 1)))} {
          // Recursive call
          @include media(slice($conditions, 2)...) {
             @content;
          }
       }
    }
 }

$animation-speed: .3s !default;

@mixin animate($properties, $duration: $animation-speed, $easing: ease) {
   $list:();
   @each $prop in $properties {
      $str: #{$prop} #{$duration} #{$easing};
      $list: join($list, #{$str}, comma);
   }
   transition: $list;
}

$maxWidth: 1920;
$maxWidthContainer: 1170;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidhtContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth-320}));
  }
}

//вызов в файле стилей
.какой-тоКласс{
  @include adaptiv-value("padding", 50, 20, 0); // аргументы: свойство, максимальное значение, минимальное значение, режим
}